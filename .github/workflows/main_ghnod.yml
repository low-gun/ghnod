name: Build and deploy Node.js app to Azure Web App - ghnod

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Clean Next.js cache and old build artifacts
        run: |
          rm -rf ~/.cache/next-swc
          rm -rf frontend/.next
          rm -rf frontend/.next/cache/webpack
          rm -rf release

      - name: Build frontend
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: https://ghnod-hvf7h4dhdpahh7h5.koreacentral-01.azurewebsites.net/api
        run: npm run build

      - name: Prepare deployment folder (release)
        run: |
          mkdir -p release/build
          # Next.js standalone 전체 복사
          cp -r frontend/.next/standalone/* release/build/

          # static, BUILD_ID, routes-manifest.json 복사
          mkdir -p release/build/.next/static
          cp -r frontend/.next/static/* release/build/.next/static/
          cp frontend/.next/BUILD_ID release/build/.next/BUILD_ID
          cp frontend/.next/routes-manifest.json release/build/.next/routes-manifest.json
          cp frontend/.next/prerender-manifest.json release/build/.next/prerender-manifest.json

          # public 복사
          mkdir -p release/build/public
          cp -r frontend/public/* release/build/public/

          # env 파일 복사
          cp frontend/.env.production release/build/.env.production

          # 백엔드 전체 복사
          cp -r backend/certs release/build/certs
          cp -r backend/config release/build/config
          cp -r backend/controllers release/build/controllers
          cp -r backend/middlewares release/build/middlewares
          cp -r backend/models release/build/models
          cp -r backend/routes release/build/routes
          cp -r backend/uploads release/build/uploads
          cp -r backend/utils release/build/utils
          cp backend/server.js release/build/server.js

          # 선택적 복사 파일
          [ -f backend/DigiCertGlobalRootCA.crt ] && cp backend/DigiCertGlobalRootCA.crt release/build/
          [ -f backend/test-db.js ] && cp backend/test-db.js release/build/
          [ -f backend/test-env.js ] && cp backend/test-env.js release/build/

      - name: Merge frontend + backend dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          jq -s '
            def deepmerge(a;b): a * b // (a + b);
            .[0] as $backend |
            .[1] as $frontend |
            {
              name: "ghnod",
              version: "1.0.0",
              main: "server.js",
              scripts: {
                start: "node server.js"
              },
              dependencies: deepmerge($backend.dependencies; $frontend.dependencies)
            }
          ' backend/package.json frontend/package.json > release/build/package.json

      - name: Install production dependencies
        working-directory: release/build
        run: |
          npm install
          npm prune --omit=dev

      - name: Print BUILD_ID before deploy
        run: cat release/build/.next/BUILD_ID

      - name: List all files before deploy
        run: find release/ -type f -ls

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "ghnod"
          slot-name: "Production"
          package: ./release/build/.
          clean: true

      - name: Force restart Azure Web App
        run: az webapp restart --name ghnod --resource-group ghnod
