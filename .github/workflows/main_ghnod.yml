name: Build and deploy Node.js app to Azure Web App - ghnod

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Clean Next.js cache
        run: |
          rm -rf ~/.cache/next-swc
          rm -rf frontend/.next
          rm -rf frontend/.next/cache/webpack

      - name: Build frontend
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: https://ghnod-hvf7h4dhdpahh7h5.koreacentral-01.azurewebsites.net/api
        run: npm run build

      - name: Prepare deployment folder
        run: |
          mkdir -p build/.next/static
          cp -r frontend/.next/standalone/* build/
          cp -r frontend/.next/static build/.next/static
          cp -r frontend/public build/public
          cp -r backend/* build/
          cp backend/server.js build/server.js
          cp frontend/.env.production build/.env.production

      - name: Merge frontend + backend dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          jq -s '
            def deepmerge(a;b): a * b // (a + b);
            .[0] as $backend |
            .[1] as $frontend |
            {
              name: "ghnod",
              version: "1.0.0",
              main: "server.js",
              scripts: {
                start: "node server.js"
              },
              dependencies: deepmerge($backend.dependencies; $frontend.dependencies)
            }
          ' backend/package.json frontend/package.json > build/package.json

      - name: Install production dependencies
        working-directory: build
        run: |
          npm install
          npm prune --omit=dev

      - name: Zip build folder
        run: |
          cd build
          zip -r ../build.zip .
          cd ..

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "ghnod"
          slot-name: "Production"
          package: build.zip
  
      - name: Wait before restart
        run: sleep 15
  
      - name: Force restart Azure Web App
        run: az webapp restart --name ghnod --resource-group ghnod